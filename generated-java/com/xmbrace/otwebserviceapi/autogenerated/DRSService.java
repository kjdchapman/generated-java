package com.xmbrace.otwebserviceapi.autogenerated;

import java.net.MalformedURLException;
import java.net.URL;
import javax.annotation.Generated;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.5.5
 * 2023-05-09T15:46:53.789+01:00
 * Generated source version: 3.5.5
 *
 */
@WebServiceClient(name = "DRSService",
                  wsdlLocation = "file:///home/kyle/workspace/minimum-kotlin-gradle/app/drs.wsdl",
                  targetNamespace = "http://autogenerated.OTWebServiceApi.xmbrace.com/")
@Generated(value = "org.apache.cxf.tools.wsdlto.WSDLToJava", date = "2023-05-09T15:46:53.789+01:00", comments = "Apache CXF 3.5.5")
public class DRSService extends Service {

    @Generated(value = "org.apache.cxf.tools.wsdlto.WSDLToJava", date = "2023-05-09T15:46:53.789+01:00")
    public final static URL WSDL_LOCATION;

    @Generated(value = "org.apache.cxf.tools.wsdlto.WSDLToJava", date = "2023-05-09T15:46:53.789+01:00")
    public final static QName SERVICE = new QName("http://autogenerated.OTWebServiceApi.xmbrace.com/", "DRSService");
    @Generated(value = "org.apache.cxf.tools.wsdlto.WSDLToJava", date = "2023-05-09T15:46:53.789+01:00")
    public final static QName DRSServiceSOAP = new QName("http://autogenerated.OTWebServiceApi.xmbrace.com/", "DRSServiceSOAP");
    static {
        URL url = null;
        try {
            url = new URL("file:///home/kyle/workspace/minimum-kotlin-gradle/app/drs.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(DRSService.class.getName())
                .log(java.util.logging.Level.INFO,
                     "Can not initialize the default wsdl from {0}", "file:///home/kyle/workspace/minimum-kotlin-gradle/app/drs.wsdl");
        }
        WSDL_LOCATION = url;
    }

    @Generated(value = "org.apache.cxf.tools.wsdlto.WSDLToJava", date = "2023-05-09T15:46:53.789+01:00")
    public DRSService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    @Generated(value = "org.apache.cxf.tools.wsdlto.WSDLToJava", date = "2023-05-09T15:46:53.789+01:00")
    public DRSService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    @Generated(value = "org.apache.cxf.tools.wsdlto.WSDLToJava", date = "2023-05-09T15:46:53.789+01:00")
    public DRSService() {
        super(WSDL_LOCATION, SERVICE);
    }

    @Generated(value = "org.apache.cxf.tools.wsdlto.WSDLToJava", date = "2023-05-09T15:46:53.789+01:00")
    public DRSService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    @Generated(value = "org.apache.cxf.tools.wsdlto.WSDLToJava", date = "2023-05-09T15:46:53.789+01:00")
    public DRSService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    @Generated(value = "org.apache.cxf.tools.wsdlto.WSDLToJava", date = "2023-05-09T15:46:53.789+01:00")
    public DRSService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }




    /**
     *
     * @return
     *     returns SOAP
     */
    @WebEndpoint(name = "DRSServiceSOAP")
    @Generated(value = "org.apache.cxf.tools.wsdlto.WSDLToJava", date = "2023-05-09T15:46:53.789+01:00")
    public SOAP getDRSServiceSOAP() {
        return super.getPort(DRSServiceSOAP, SOAP.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns SOAP
     */
    @WebEndpoint(name = "DRSServiceSOAP")
    @Generated(value = "org.apache.cxf.tools.wsdlto.WSDLToJava", date = "2023-05-09T15:46:53.789+01:00")
    public SOAP getDRSServiceSOAP(WebServiceFeature... features) {
        return super.getPort(DRSServiceSOAP, SOAP.class, features);
    }

}
